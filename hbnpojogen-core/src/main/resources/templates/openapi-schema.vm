$class.className:
    type: object
    properties:
#foreach( $property in $properties )
#if ( !$property.oneToMany && !$property.manyToMany )
        $property.propertyName:
#if ( $property.isRefField() )
            allOf:
                - $property.computedOpenApiType
#else
            $property.computedOpenApiType
#end
#if ( $property.openApiFormat)
            format: $property.openApiFormat
#end
#if ( !$property.isNullable() )
            nullable: false
#end
#if ( $property.isOpenApiReadOnlyField() )
            readOnly: true
#end
#if ( $property.openApiWriteOnlyField )
            writeOnly: true
#end
#if ( $property.openApiEnumValues)
            enum: $property.openApiEnumValues
#end
#if ( $property.length)
            maxLength: $property.length
#end
#if ( !$property.getFieldComment().equals(""))
            description: $property.getFieldComment()
#end
#end
#end

paths:
    getOne:
            get: &getoneanchor
                tags:
                    - $class.className
                summary: Get $class.className.toLowerCase() by Id
                description: "Get a single record associated with the given ID"
                operationId: get${class.className}ById
                parameters:
                    - name: $class.className.toLowerCase()Id
                      in: path
                      description: ID of $class.className.toLowerCase()
                      required: true
                      x-encrypted-id: true
                      schema:
                          type: string
                responses:
                    "200":
                        description: Request accepted
                        content:
                            application/json:
                                schema:
                                    $ref: "#/$class.className"
                    "400":
                        $ref: "${this.openApiCommon()}#/responses/Standard400Response"
                    "401":
                        $ref: "${this.openApiCommon()}#/responses/Standard401Response"
                    "403":
                        $ref: "${this.openApiCommon()}#/responses/Standard403Response"
                    "404":
                        $ref: "${this.openApiCommon()}#/responses/Standard404Response"
    create:
        post: &postanchor
            tags:
                - $class.className
            summary: Create a new $class.className.toLowerCase()
            description: ""
            operationId: create$class.className
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/$class.className"
                required: true
            responses:
                "201":
                    description:  The request has been fulfilled and has resulted in one or more new resources being created.
                    content:
                        application/json:
                            schema:
                                $ref: "#/$class.className"
                "400":
                    $ref: "${this.openApiCommon()}#/responses/Standard400Response"
                "401":
                    $ref: "${this.openApiCommon()}#/responses/Standard401Response"
                "403":
                    $ref: "${this.openApiCommon()}#/responses/Standard403Response"
                "409":
                    $ref: "${this.openApiCommon()}#/responses/Standard409Response"
    update:
        put: &updateanchor
            tags:
                - $class.className
            summary: Update a  $class.className.toLowerCase()
            description: ""
            operationId: update$class.className
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/$class.className"
                required: true
            responses:
                "201":
                    $ref: "${this.openApiCommon()}#/responses/Standard200Response"
                "400":
                    $ref: "${this.openApiCommon()}#/responses/Standard400Response"
                "401":
                    $ref: "${this.openApiCommon()}#/responses/Standard401Response"
                "403":
                    $ref: "${this.openApiCommon()}#/responses/Standard403Response"
                "409":
                    $ref: "${this.openApiCommon()}#/responses/Standard409Response"
    delete:
        get: &deleteanchor
            tags:
                - $class.className
            summary: Deletes $class.className.toLowerCase() by Id
            description: "Deletes a single record associated with the given ID"
            operationId: delete${class.className}ById
            parameters:
                - name: $class.className.toLowerCase()Id
                  in: path
                  description: ID of $class.className.toLowerCase()
                  required: true
                  x-encrypted-id: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Request accepted
                    content:
                        application/json:
                            schema:
                                $ref: "#/$class.className"
                "400":
                    $ref: "${this.openApiCommon()}#/responses/Standard400Response"
                "401":
                    $ref: "${this.openApiCommon()}#/responses/Standard401Response"
                "403":
                    $ref: "${this.openApiCommon()}#/responses/Standard403Response"
                "404":
                    $ref: "${this.openApiCommon()}#/responses/Standard404Response"
    getAll:
        get: &getallanchor
            tags:
                - $class.className
            summary: Get list of $class.getNiceClassName().toLowerCase()
            operationId: get$class.getNiceClassName()
            parameters:
                - $ref: "${this.openApiCommon()}#/components/parameters/pageParam"
                - $ref: "${this.openApiCommon()}#/components/parameters/sizeParam"
                - in: query
                  name: sort
                  x-ignore-param: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Request accepted
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/$class.className"
                "400":
                    $ref: "${this.openApiCommon()}#/responses/Standard400Response"
                "401":
                    $ref: "${this.openApiCommon()}#/responses/Standard401Response"
                "403":
                    $ref: "${this.openApiCommon()}#/responses/Standard403Response"
                "404":
                    $ref: "${this.openApiCommon()}#/responses/Standard404Response"
            x-querydsl-binding: QueryDslBinder
            x-payload-class: Page


    getone_put:
        get: *getoneanchor
        put: *updateanchor
    getone_delete:
        get: *getoneanchor
        delete: *deleteanchor
    getall_post:
        get: *getallanchor
        post: *postanchor
    post_delete:
        post: *postanchor
        delete: *deleteanchor
    put_delete:
        put: *updateanchor
        delete: *deleteanchor
    getone_put_delete:
        get: *getoneanchor
        put: *updateanchor
        delete: *deleteanchor

